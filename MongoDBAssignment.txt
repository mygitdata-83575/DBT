Q1
sudo apt-get install gnupg curl

Q2
curl -fsSL https://www.mongodb.org/static/pgp/server-7.0.asc | \sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg \--dearmor

Q3
echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list

Q4
sudo apt-get update
sudo apt-get install -y mongodb-org


Q5
mongosh
Current Mongosh Log ID:	65f5712d9a87765cf8db83af
Connecting to:		mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.0
Using MongoDB:		7.0.6
Using Mongosh:		2.2.0

For mongosh info see: https://docs.mongodb.com/mongodb-shell/

------
   The server generated these startup warnings when booting
   2024-03-16T14:13:33.936+05:30: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2024-03-16T14:13:34.819+05:30: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted
   2024-03-16T14:13:34.820+05:30: vm.max_map_count is too low
------

test> 




Q6
test> show dbs
admin   40.00 KiB
config  60.00 KiB
local   72.00 KiB

Q7
test> use cdac
switched to db cdac

Q8
cdac> show collections;

Q9
cdac> db.createCollection("library")
{ ok: 1 }

Q10
cdac> db.library.insert({title:'MongoDB programming',author:'Sameer',likes:100})
DeprecationWarning: Collection.insert() is deprecated. Use insertOne, insertMany, or bulkWrite.
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('65f5641dd9203980c2db83b0') }
}

Q11
cdac> db.library.find()
[
  {
    _id: ObjectId('65f5641dd9203980c2db83b0'),
    title: 'MongoDB programming',
    author: 'Sameer',
    likes: 100
  }
]

Q12
cdac> db.library.insert({title:'MySQL programming',authors:['Jack','Jill'],likes:200,})
{
  acknowledged: true,
  insertedIds: { '0': ObjectId('65f565e8d9203980c2db83b1') }
}

Q13
cdac> db.library.find()
[
  {
    _id: ObjectId('65f5641dd9203980c2db83b0'),
    title: 'MongoDB programming',
    author: 'Sameer',
    likes: 100
  },
  {
    _id: ObjectId('65f565e8d9203980c2db83b1'),
    title: 'MySQL programming',
    authors: [ 'Jack', 'Jill' ],
    likes: 200
  }
]

Q14
cdac> db.library.findOne()
{
  _id: ObjectId('65f5641dd9203980c2db83b0'),
  title: 'MongoDB programming',
  author: 'Sameer',
  likes: 100
}

Q15
cdac> db.library.find().pretty()
[
  {
    _id: ObjectId('65f5641dd9203980c2db83b0'),
    title: 'MongoDB programming',
    author: 'Sameer',
    likes: 100
  },
  {
    _id: ObjectId('65f565e8d9203980c2db83b1'),
    title: 'MySQL programming',
    authors: [ 'Jack', 'Jill' ],
    likes: 200
  }
]

Q16
cdac> db.library.update({author:'Sameer'},{$set:{author:'Sameer Dehadrai'}})
DeprecationWarning: Collection.update() is deprecated. Use updateOne, updateMany, or bulkWrite.
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}

Q17
cdac> db.library.remove({likes:100})
DeprecationWarning: Collection.remove() is deprecated. Use deleteOne, deleteMany, findOneAndDelete, or bulkWrite.
{ acknowledged: true, deletedCount: 1 }

Q18
cdac> db.library.drop()
true

Q19
cdac> db.dropDatabase()
{ ok: 1, dropped: 'cdac' }

Q20
cdac> exit
ashish@ashish-HP-Pavilion-Laptop-14-ec0xxx:~$ 

Q21
Stop MongoDB server by cltr+c


